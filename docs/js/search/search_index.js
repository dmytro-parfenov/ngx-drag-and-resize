var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Boundary.html",[0,0.284,1,1.129]],["body/interfaces/Boundary.html",[0,0.343,1,1.726,2,1.02,3,0.637,4,0.637,5,0.637,6,3.219,7,0.531,8,1.115,9,3.144,10,3.144,11,3.144,12,3.144,13,2.986,14,0.933,15,0.054,16,0.531,17,0.043,18,0.043]],["title/interfaces/Movement.html",[0,0.284,19,1.781]],["body/interfaces/Movement.html",[0,0.324,1,1.952,2,0.964,3,0.602,4,0.602,5,0.602,7,0.502,8,1.075,14,0.914,15,0.053,16,0.502,17,0.041,18,0.041,19,2.624,20,3.042,21,1.923,22,2.394,23,3.078,24,3.691,25,1.664,26,2.256,27,3.691,28,3.489,29,2.478,30,1.075,31,2.027,32,2.027,33,1.726]],["title/interfaces/MovementBase.html",[0,0.284,34,1.781]],["body/interfaces/MovementBase.html",[0,0.347,2,1.034,3,0.645,4,0.645,5,0.645,7,0.538,8,1.125,14,0.815,15,0.054,16,0.538,17,0.043,18,0.043,21,2.011,22,2.438,23,3.159,26,2.315,30,0.891,31,2.174,32,2.174,34,2.745,35,2.607,36,2.607,37,3.606,38,3.606]],["title/interfaces/NgxDrag.html",[0,0.284,39,1.781]],["body/interfaces/NgxDrag.html",[0,0.373,1,1.969,2,1.109,3,0.692,4,0.692,5,0.692,7,0.577,8,1.175,14,0.692,15,0.052,16,0.577,17,0.045,18,0.045,21,2.102,25,1.819,26,2.374,29,2.644,30,0.956,33,1.986,39,2.868,40,3.501]],["title/directives/NgxDragDirective.html",[41,1.129,42,1.305]],["body/directives/NgxDragDirective.html",[1,0.874,3,0.142,4,0.142,5,0.142,7,0.118,9,0.846,10,2.505,11,0.846,12,2.505,13,0.72,14,0.56,15,0.057,16,0.118,17,0.013,18,0.013,19,0.846,21,0.62,22,0.62,23,0.846,24,0.572,25,0.722,26,0.35,27,1.014,28,2.263,29,1.173,30,1.026,31,2.011,32,0.846,33,0.406,34,0.477,39,1.139,41,1,42,0.62,43,0.35,44,0.716,45,0.35,46,0.846,47,1.383,48,0.536,49,1.685,50,1.014,51,1.744,52,0.846,53,0.846,54,0.846,55,1.709,56,0.846,57,1.709,58,1.139,59,0.477,60,1.577,61,1.269,62,1.652,63,1.014,64,2.068,65,1.709,66,1.709,67,1.709,68,1.269,69,2.068,70,1.269,71,0.846,72,0.477,73,1.744,74,1.709,75,2.068,76,2.833,77,3.667,78,3.019,79,1.139,80,1.744,81,2.011,82,1.269,83,1.139,84,1.139,85,3.019,86,1.269,87,2.618,88,2.12,89,1.709,90,1.709,91,1.89,92,0.716,93,2.091,94,1.744,95,1.139,96,0.716,97,1.269,98,1.269,99,1.89,100,1.744,101,0.716,102,1.269,103,1.365,104,2.263,105,0.716,106,1.269,107,1.709,108,2.068,109,1.269,110,1.269,111,2.091,112,2.068,113,1.269,114,1.269,115,1.014,116,1.269,117,1.709,118,2.366,119,1.709,120,1.269,121,1.269,122,0.716,123,0.62,124,1.709,125,1.269,126,1.269,127,2.12,128,0.716,129,0.477,130,1.89,131,1.269,132,0.477,133,0.35,134,1.709,135,0.716,136,0.716,137,0.716,138,0.716,139,0.716,140,0.477,141,0.406,142,0.716,143,0.716,144,0.716,145,0.716,146,1.269,147,0.716,148,0.35,149,0.35,150,0.35,151,0.477,152,0.477,153,0.35,154,1.269,155,1.652,156,2.443,157,0.716,158,0.716,159,0.716,160,1.709,161,0.572,162,0.716,163,0.716,164,0.716,165,0.716,166,0.716,167,1.744,168,0.716,169,0.716,170,0.477,171,0.716,172,0.846,173,0.716,174,0.477,175,1.887,176,0.572,177,0.477,178,0.716,179,1.709,180,0.716,181,0.716,182,0.716,183,1.709,184,2.366,185,1.709,186,0.716,187,0.716,188,0.716,189,0.716,190,0.716,191,0.716,192,0.716,193,1.709,194,0.716,195,1.709,196,1.269,197,1.709,198,0.716,199,2.366,200,1.269,201,1.269,202,0.716,203,0.716,204,0.716,205,0.716,206,0.716,207,0.716,208,0.572,209,0.716,210,0.716,211,1.269,212,1.709,213,1.269,214,1.709,215,1.269,216,0.716,217,0.716,218,0.716,219,0.716,220,1.269,221,0.716,222,0.716,223,0.716,224,0.716,225,0.716,226,0.716,227,1.269,228,1.269,229,0.716,230,0.716,231,0.716,232,1.269,233,0.716,234,0.716,235,0.716,236,1.269,237,1.269,238,2.068,239,0.846,240,0.846,241,0.716,242,0.716,243,0.716,244,2.068,245,1.269,246,1.269,247,1.269,248,1.269,249,1.269,250,1.269,251,0.716,252,0.716,253,0.716,254,0.477,255,0.716,256,0.716,257,0.716,258,0.716]],["title/directives/NgxDragHandleDirective.html",[41,1.129,259,1.516]],["body/directives/NgxDragHandleDirective.html",[3,0.421,4,0.421,5,0.421,14,0.421,15,0.056,16,0.351,17,0.032,18,0.032,25,1.532,30,0.99,41,1.679,42,2.215,43,1.041,45,1.041,46,2.056,48,1.303,49,2.06,51,2.056,52,2.056,53,2.056,54,2.056,56,2.056,58,2.416,59,1.42,60,2.056,62,1.702,71,2.056,72,1.42,73,2.93,79,2.416,80,2.416,81,1.42,83,1.42,84,1.42,88,2.056,95,1.42,123,1.506,127,2.416,129,1.42,132,1.42,133,1.041,140,1.42,141,1.209,148,1.041,149,1.041,150,1.041,151,1.42,152,1.42,153,1.041,155,1.702,156,2.648,161,1.702,167,2.416,170,1.42,172,2.056,174,1.42,175,1.42,176,2.465,177,1.42,254,2.056,259,1.75,260,3.085,261,1.702,262,2.465,263,2.897,264,2.465,265,3.626,266,2.131,267,2.131,268,1.702,269,1.702,270,2.131,271,2.131,272,2.131]],["title/modules/NgxDragResizeModule.html",[273,1.516,274,1.305]],["body/modules/NgxDragResizeModule.html",[3,0.438,4,0.438,5,0.438,15,0.055,16,0.366,17,0.033,18,0.033,30,1.217,42,2.421,45,1.082,47,1.55,48,1.341,133,1.082,148,1.082,149,1.082,150,1.082,153,1.082,259,2.813,273,2.103,274,2.491,275,1.477,276,1.477,277,1.771,278,2.962,279,1.771,280,1.771,281,2.962,282,1.771,283,1.771,284,1.771,285,3.303,286,2.813,287,2.535,288,1.771,289,1.771,290,2.217,291,2.217,292,2.115,293,2.115,294,2.115,295,1.801,296,2.115,297,2.535,298,2.535,299,2.217,300,2.217,301,3.174,302,2.217,303,2.217,304,3.174,305,2.217,306,1.771]],["title/interfaces/NgxResize.html",[0,0.284,307,2.135]],["body/interfaces/NgxResize.html",[0,0.373,1,1.969,2,1.109,3,0.692,4,0.692,5,0.692,7,0.577,8,1.175,14,0.692,15,0.052,16,0.577,17,0.045,18,0.045,21,2.102,25,1.819,26,2.374,29,2.644,30,0.956,33,1.986,307,3.439,308,3.501]],["title/directives/NgxResizeHandleDirective.html",[41,1.129,286,1.516]],["body/directives/NgxResizeHandleDirective.html",[3,0.37,4,0.37,5,0.37,7,0.308,14,0.738,15,0.056,16,0.308,17,0.029,18,0.029,25,1.42,30,1.019,41,1.577,43,0.913,45,0.913,46,1.867,47,1.368,48,1.577,49,2.049,51,1.867,52,1.867,53,1.867,54,1.867,56,1.867,58,2.239,59,1.246,60,1.867,63,2.239,71,1.867,72,1.246,73,2.796,79,2.239,80,2.239,81,1.867,83,1.246,84,1.246,91,2.239,93,1.494,94,1.246,95,1.246,100,2.487,123,1.822,127,1.867,129,1.246,130,1.494,132,1.246,133,0.913,140,1.246,141,1.061,148,0.913,149,0.913,150,0.913,151,1.246,152,1.246,153,0.913,156,2.239,167,2.239,170,1.246,172,1.867,174,1.246,175,1.867,177,1.246,254,1.246,261,1.494,262,2.239,263,2.685,268,1.494,269,2.239,285,2.796,286,1.59,295,1.59,309,2.685,310,2.803,311,2.803,312,3.733,313,3.361,314,2.803,315,2.685,316,2.803,317,2.803,318,2.803,319,2.803,320,1.871,321,1.871,322,1.871,323,1.871,324,1.871,325,1.246,326,2.803,327,1.871,328,1.871]],["title/interfaces/PositionBase.html",[0,0.284,22,1.305]],["body/interfaces/PositionBase.html",[0,0.371,2,1.104,3,0.689,4,0.689,5,0.689,7,0.575,8,1.172,13,2.879,14,0.849,15,0.053,16,0.575,17,0.045,18,0.045,22,2.096,36,2.783,239,3.234,240,3.234,329,3.485]],["title/interfaces/Scale.html",[0,0.284,330,2.135]],["body/interfaces/Scale.html",[0,0.39,2,1.16,3,0.724,4,0.724,5,0.724,7,0.604,8,1.208,13,2.697,14,0.724,15,0.053,16,0.604,17,0.046,18,0.046,330,3.534,331,3.662,332,4.937]],["title/changelog.html",[333,1.795,334,1.795,335,1.795]],["body/changelog.html",[15,0.045,17,0.045,18,0.045,133,1.685,141,1.958,208,3.971,276,2.299,335,2.757,336,2.757,337,3.451,338,3.451,339,3.451,340,3.451,341,4.266,342,3.451,343,4.266,344,2.299,345,3.451,346,3.451,347,3.451,348,3.699,349,3.451,350,3.451,351,3.451,352,2.757,353,3.451,354,3.451,355,3.451,356,3.451,357,3.451]],["title/miscellaneous/enumerations.html",[358,1.275,359,2.56]],["body/miscellaneous/enumerations.html",[7,0.538,9,3.159,10,3.159,11,3.159,12,3.159,15,0.055,17,0.043,18,0.043,94,3.418,123,2.011,309,2.607,315,3.291,358,1.851,359,2.607,360,3.263,361,4.12,362,3.263,363,3.263,364,3.263,365,3.263]],["title/index.html",[7,0.371,333,1.795,334,1.795]],["body/index.html",[15,0.052,16,0.444,17,0.038,18,0.038,30,0.991,43,1.313,47,2.436,48,1.136,49,1.313,50,2.148,88,1.792,111,2.148,123,1.313,153,1.313,264,2.148,273,1.526,274,2.007,292,1.792,293,1.792,294,2.419,295,2.83,296,1.792,297,2.148,298,2.148,306,2.148,325,3.062,344,1.792,348,2.148,352,2.148,366,2.148,367,3.631,368,3.631,369,3.631,370,2.689,371,3.631,372,2.689,373,2.689,374,2.689,375,4.596,376,2.689,377,2.689,378,3.631,379,2.689,380,2.689,381,3.631,382,2.689,383,2.689,384,2.689,385,2.689,386,2.689,387,2.689,388,2.689,389,2.689,390,2.689,391,2.689,392,2.689,393,2.689]],["title/modules.html",[275,2.409]],["body/modules.html",[15,0.049,17,0.049,18,0.049,274,1.958,275,2.671,394,4.009,395,4.009,396,4.009,397,4.009]],["title/overview.html",[398,2.888]],["body/overview.html",[2,0.932,15,0.054,17,0.04,18,0.04,42,2.417,43,1.437,259,2.808,273,2.187,274,2.563,276,1.961,277,2.351,278,2.351,279,2.351,280,2.351,281,2.351,282,2.351,283,2.351,284,2.351,285,3.298,286,2.808,287,3.079,288,2.351,289,2.351,398,2.351,399,2.943,400,2.943,401,2.943]],["title/properties.html",[8,0.875,402,2.247]],["body/properties.html",[8,0.891,15,0.055,17,0.043,18,0.043,45,1.593,47,2.387,48,1.379,49,1.593,148,1.593,149,1.593,150,1.593,292,2.174,293,2.174,294,2.174,295,2.561,296,2.174,325,2.174,336,2.607,344,2.745,366,2.607,403,3.263,404,3.263,405,3.263,406,3.263,407,3.263,408,3.263,409,4.12,410,4.12,411,3.263,412,3.263,413,3.263,414,3.263,415,3.263]],["title/miscellaneous/typealiases.html",[358,1.275,416,3.205]],["body/miscellaneous/typealiases.html",[7,0.556,14,0.666,15,0.054,17,0.044,18,0.044,35,2.692,37,2.692,38,2.692,99,3.358,100,2.245,103,3.358,104,2.692,115,2.692,239,2.245,240,2.245,358,1.912,417,3.37,418,3.37,419,4.204,420,3.37,421,4.204,422,4.204,423,4.204,424,4.204,425,4.204,426,3.37,427,3.37,428,3.37,429,3.37,430,3.37]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":179,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["0.0.2",{"_index":354,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":351,"title":{},"body":{"changelog.html":{}}}],["0.0.4",{"_index":350,"title":{},"body":{"changelog.html":{}}}],["0.0.5",{"_index":349,"title":{},"body":{"changelog.html":{}}}],["0.0.6",{"_index":347,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":399,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":342,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":339,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":336,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["19.0.0",{"_index":341,"title":{},"body":{"changelog.html":{}}}],["2.8.1",{"_index":338,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":400,"title":{},"body":{"overview.html":{}}}],["7",{"_index":401,"title":{},"body":{"overview.html":{}}}],["absolute",{"_index":430,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["accessors",{"_index":70,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["add",{"_index":372,"title":{},"body":{"index.html":{}}}],["added",{"_index":355,"title":{},"body":{"changelog.html":{}}}],["affect",{"_index":318,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["afterviewinit",{"_index":263,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["aliases",{"_index":417,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":46,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["angular",{"_index":344,"title":{},"body":{"changelog.html":{},"index.html":{},"properties.html":{}}}],["angular/common",{"_index":141,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"changelog.html":{}}}],["angular/core",{"_index":133,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"changelog.html":{}}}],["app",{"_index":393,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":376,"title":{},"body":{"index.html":{}}}],["attribute",{"_index":316,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["author",{"_index":148,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"properties.html":{}}}],["axis",{"_index":99,"title":{},"body":{"directives/NgxDragDirective.html":{},"miscellaneous/typealiases.html":{}}}],["base",{"_index":32,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{}}}],["base.ts",{"_index":36,"title":{},"body":{"interfaces/MovementBase.html":{},"interfaces/PositionBase.html":{}}}],["boolean",{"_index":92,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["bootstrap",{"_index":279,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["borders",{"_index":388,"title":{},"body":{"index.html":{}}}],["bottom",{"_index":9,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"miscellaneous/enumerations.html":{}}}],["bottomleft",{"_index":365,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bottomright",{"_index":364,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["boundary",{"_index":1,"title":{"interfaces/Boundary.html":{}},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["boundarydirective",{"_index":55,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect",{"_index":220,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect.bottom",{"_index":233,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect.left",{"_index":228,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect.right",{"_index":229,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["boundaryrect.top",{"_index":232,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["browse",{"_index":397,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":394,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":408,"title":{},"body":{"properties.html":{}}}],["calculation",{"_index":217,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["changed",{"_index":162,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["changelog",{"_index":335,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":119,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["changing",{"_index":108,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["class",{"_index":153,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["cluster_ngxdragresizemodule",{"_index":282,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["cluster_ngxdragresizemodule_declarations",{"_index":284,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["cluster_ngxdragresizemodule_exports",{"_index":283,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["compiler",{"_index":53,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["const",{"_index":199,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["constrain",{"_index":87,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["constructor",{"_index":71,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["constructor(elementref",{"_index":72,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["core/axis",{"_index":143,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["core/drag.service",{"_index":144,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["core/movement/movement",{"_index":146,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["core/position",{"_index":147,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["core/window.token",{"_index":145,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["css",{"_index":89,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["declarations",{"_index":278,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["default",{"_index":93,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["define",{"_index":91,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["defined",{"_index":81,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["delta",{"_index":332,"title":{},"body":{"interfaces/Scale.html":{}}}],["demo",{"_index":367,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":276,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"changelog.html":{},"overview.html":{}}}],["description",{"_index":45,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"properties.html":{}}}],["destroy",{"_index":159,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["destroyed",{"_index":158,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["devices",{"_index":386,"title":{},"body":{"index.html":{}}}],["directive",{"_index":41,"title":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["directives",{"_index":43,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{},"overview.html":{}}}],["disable",{"_index":97,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["dmytro",{"_index":149,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"properties.html":{}}}],["docs",{"_index":348,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["document",{"_index":78,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["documentation",{"_index":352,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["drag",{"_index":47,"title":{},"body":{"directives/NgxDragDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{},"properties.html":{}}}],["drag.directive",{"_index":267,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["drag/drag",{"_index":300,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["drag/drag.directive",{"_index":299,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["dragdirective",{"_index":265,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["dragged",{"_index":120,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["dragging",{"_index":88,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"index.html":{}}}],["dragservice",{"_index":76,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["during",{"_index":319,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["dynamic",{"_index":151,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["element",{"_index":49,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{},"properties.html":{}}}],["elementref",{"_index":73,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["elements",{"_index":297,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{}}}],["emitdrag(nativeevent",{"_index":255,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["emits",{"_index":118,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["enumerations",{"_index":359,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["eslint",{"_index":346,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":29,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["event.initial",{"_index":196,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.initial.x",{"_index":193,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.initial.y",{"_index":195,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.nativeevent.preventdefault",{"_index":190,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.offsetfromhost.left",{"_index":223,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.offsetfromhost.top",{"_index":225,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.x",{"_index":222,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["event.y",{"_index":224,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["eventemitter",{"_index":117,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["eventinitial",{"_index":185,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["eventinitial.x",{"_index":192,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["eventinitial.y",{"_index":194,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["events",{"_index":98,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["example",{"_index":375,"title":{},"body":{"index.html":{}}}],["examples",{"_index":391,"title":{},"body":{"index.html":{}}}],["export",{"_index":16,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"index.html":{}}}],["exports",{"_index":281,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["extends",{"_index":21,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["false",{"_index":95,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["find",{"_index":392,"title":{},"body":{"index.html":{}}}],["fingers",{"_index":384,"title":{},"body":{"index.html":{}}}],["fixed",{"_index":429,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["free",{"_index":104,"title":{},"body":{"directives/NgxDragDirective.html":{},"miscellaneous/typealiases.html":{}}}],["fromelement(target",{"_index":187,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["function/translate3d",{"_index":114,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["functionality",{"_index":296,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{},"properties.html":{}}}],["getting",{"_index":333,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["handle",{"_index":123,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["handle.directive",{"_index":301,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["handle.directive.ts",{"_index":261,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["handle.directive.ts:25",{"_index":266,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["handle.directive.ts:34",{"_index":314,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["homepage",{"_index":405,"title":{},"body":{"properties.html":{}}}],["host",{"_index":155,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{}}}],["hostbinding",{"_index":320,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["hostbinding('attr.data",{"_index":324,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["hostelementrect",{"_index":183,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.bottom",{"_index":202,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.height",{"_index":234,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.left",{"_index":201,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.right",{"_index":203,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.top",{"_index":200,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrect.width",{"_index":230,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["hostelementrectinitial",{"_index":157,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["html",{"_index":48,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{},"properties.html":{}}}],["htmlelement",{"_index":28,"title":{},"body":{"interfaces/Movement.html":{},"directives/NgxDragDirective.html":{}}}],["https://angular.io/guide/angular",{"_index":52,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["https://developer.mozilla.org/en",{"_index":112,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["https://dmytro",{"_index":406,"title":{},"body":{"properties.html":{}}}],["https://github.com/dmytro",{"_index":409,"title":{},"body":{"properties.html":{}}}],["implements",{"_index":56,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["import",{"_index":30,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{}}}],["imports",{"_index":306,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["inheritdoc",{"_index":172,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["initial",{"_index":23,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{}}}],["initiator",{"_index":24,"title":{},"body":{"interfaces/Movement.html":{},"directives/NgxDragDirective.html":{}}}],["inject",{"_index":129,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["inject(document",{"_index":169,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["inject(platform_id",{"_index":170,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["inject(window",{"_index":168,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["input",{"_index":130,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["input('ngxresizehandle",{"_index":323,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["inputs",{"_index":63,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["install",{"_index":368,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"interfaces/NgxResize.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"interfaces/NgxResize.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"interfaces/NgxResize.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"overview.html":{}}}],["isplatformserver",{"_index":140,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["isplatformserver(this.platformid",{"_index":174,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["keywords",{"_index":404,"title":{},"body":{"properties.html":{}}}],["left",{"_index":10,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"miscellaneous/enumerations.html":{}}}],["left')}px",{"_index":250,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["legend",{"_index":277,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["library",{"_index":366,"title":{},"body":{"index.html":{},"properties.html":{}}}],["license",{"_index":412,"title":{},"body":{"properties.html":{}}}],["link",{"_index":254,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["locks",{"_index":102,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["map",{"_index":136,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["map((event",{"_index":191,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["mark",{"_index":262,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["matching",{"_index":18,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["math.max(boundaryrect.left",{"_index":226,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["math.max(boundaryrect.top",{"_index":231,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["math.min",{"_index":227,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["meinitiates",{"_index":379,"title":{},"body":{"index.html":{}}}],["meresize",{"_index":387,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":59,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["methods",{"_index":61,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["migrate",{"_index":343,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":358,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["mit",{"_index":413,"title":{},"body":{"properties.html":{}}}],["module",{"_index":273,"title":{"modules/NgxDragResizeModule.html":{}},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":275,"title":{"modules.html":{}},"body":{"modules/NgxDragResizeModule.html":{},"modules.html":{}}}],["more",{"_index":390,"title":{},"body":{"index.html":{}}}],["mouseevent",{"_index":37,"title":{},"body":{"interfaces/MovementBase.html":{},"miscellaneous/typealiases.html":{}}}],["movement",{"_index":19,"title":{"interfaces/Movement.html":{}},"body":{"interfaces/Movement.html":{},"directives/NgxDragDirective.html":{}}}],["movementbase",{"_index":34,"title":{"interfaces/MovementBase.html":{}},"body":{"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{}}}],["movementnative",{"_index":419,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["name",{"_index":84,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["native.ts",{"_index":421,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["nativeevent",{"_index":26,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["new",{"_index":160,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngafterviewinit",{"_index":268,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["ngmodule",{"_index":298,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":177,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["ngoninit",{"_index":173,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngx",{"_index":325,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{},"index.html":{},"properties.html":{}}}],["ngxdrag",{"_index":39,"title":{"interfaces/NgxDrag.html":{}},"body":{"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{}}}],["ngxdragboundary",{"_index":64,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragboundary(boundary",{"_index":165,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragdirective",{"_index":42,"title":{"directives/NgxDragDirective.html":{}},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["ngxdragdisabled",{"_index":65,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragged",{"_index":69,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdraghandle",{"_index":264,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"index.html":{}}}],["ngxdraghandledirective",{"_index":259,"title":{"directives/NgxDragHandleDirective.html":{}},"body":{"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["ngxdraglockaxis",{"_index":66,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragpositionstrategy",{"_index":67,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["ngxdragresizemodule",{"_index":274,"title":{"modules/NgxDragResizeModule.html":{}},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["ngxresize",{"_index":307,"title":{"interfaces/NgxResize.html":{}},"body":{"interfaces/NgxResize.html":{}}}],["ngxresizedirective",{"_index":285,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"overview.html":{}}}],["ngxresizehandle",{"_index":312,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["ngxresizehandledirective",{"_index":286,"title":{"directives/NgxResizeHandleDirective.html":{}},"body":{"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"overview.html":{}}}],["ngxresizehandletype",{"_index":315,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{},"miscellaneous/enumerations.html":{}}}],["npm",{"_index":369,"title":{},"body":{"index.html":{}}}],["null",{"_index":100,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":13,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["object",{"_index":80,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["observable",{"_index":161,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{}}}],["observabletargetchange",{"_index":163,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["observe",{"_index":62,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{}}}],["observe(target",{"_index":121,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["offsetfromhost",{"_index":27,"title":{},"body":{"interfaces/Movement.html":{},"directives/NgxDragDirective.html":{}}}],["ondestroy",{"_index":58,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["ondrag(event",{"_index":218,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["one",{"_index":310,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["oninit",{"_index":57,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["opportunity",{"_index":293,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{},"properties.html":{}}}],["optional",{"_index":25,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["options#strictmetadataemit",{"_index":54,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["out",{"_index":289,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["output",{"_index":131,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["outputs",{"_index":68,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["overview",{"_index":398,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":402,"title":{"properties.html":{}},"body":{}}],["page",{"_index":50,"title":{},"body":{"directives/NgxDragDirective.html":{},"index.html":{}}}],["parameters",{"_index":83,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["parfenov",{"_index":150,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"properties.html":{}}}],["parfenov.github.io/ngx",{"_index":407,"title":{},"body":{"properties.html":{}}}],["parfenov/ngx",{"_index":410,"title":{},"body":{"properties.html":{}}}],["peerdependencies",{"_index":340,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":188,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["platform_id",{"_index":132,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["platformid",{"_index":79,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["point",{"_index":270,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["position",{"_index":31,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{}}}],["positionbase",{"_index":22,"title":{"interfaces/PositionBase.html":{}},"body":{"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"directives/NgxDragDirective.html":{},"interfaces/PositionBase.html":{}}}],["positioning",{"_index":106,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["positionstrategy",{"_index":103,"title":{},"body":{"directives/NgxDragDirective.html":{},"miscellaneous/typealiases.html":{}}}],["positiontype",{"_index":424,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["private",{"_index":156,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"interfaces/NgxResize.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"properties.html":{}}}],["providers",{"_index":280,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["provides",{"_index":292,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{},"properties.html":{}}}],["put",{"_index":90,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["readonly",{"_index":167,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["rect",{"_index":211,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rect.bottom",{"_index":258,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rect.left",{"_index":213,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rect.right",{"_index":257,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rect.top",{"_index":215,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["relative",{"_index":115,"title":{},"body":{"directives/NgxDragDirective.html":{},"miscellaneous/typealiases.html":{}}}],["renderer",{"_index":74,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["renderer2",{"_index":75,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["repository",{"_index":414,"title":{},"body":{"properties.html":{}}}],["reset",{"_index":288,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}],["resize",{"_index":295,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"directives/NgxResizeHandleDirective.html":{},"index.html":{},"properties.html":{}}}],["resize.directive",{"_index":322,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["resize.git",{"_index":415,"title":{},"body":{"properties.html":{}}}],["resize.module.ts",{"_index":291,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["resize/issues",{"_index":411,"title":{},"body":{"properties.html":{}}}],["resize/resize",{"_index":303,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["resize/resize.directive",{"_index":302,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["resizedirective",{"_index":313,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["resizing",{"_index":311,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["results",{"_index":17,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":175,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["returns",{"_index":126,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["right",{"_index":11,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"miscellaneous/enumerations.html":{}}}],["rxjs",{"_index":135,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["rxjs/operators",{"_index":139,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["save",{"_index":370,"title":{},"body":{"index.html":{}}}],["scale",{"_index":330,"title":{"interfaces/Scale.html":{}},"body":{"interfaces/Scale.html":{}}}],["scroll",{"_index":382,"title":{},"body":{"index.html":{}}}],["see",{"_index":51,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["selector",{"_index":60,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["set",{"_index":164,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["setngxdragboundary(boundary",{"_index":128,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["sets",{"_index":269,"title":{},"body":{"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["shared/boundary/boundary",{"_index":33,"title":{},"body":{"interfaces/Movement.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"interfaces/NgxResize.html":{}}}],["shared/boundary/boundary.directive",{"_index":142,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["shared/shared.module",{"_index":305,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["sharedmodule",{"_index":304,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["side",{"_index":317,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["simple",{"_index":378,"title":{},"body":{"index.html":{}}}],["size",{"_index":154,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"modules/NgxDragResizeModule.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{}}}],["src/.../axis.ts",{"_index":418,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../movement",{"_index":420,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../position",{"_index":422,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../resize",{"_index":360,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/lib/core/axis.ts",{"_index":426,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/core/movement/movement",{"_index":35,"title":{},"body":{"interfaces/MovementBase.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/core/movement/movement.ts",{"_index":20,"title":{},"body":{"interfaces/Movement.html":{}}}],["src/lib/core/position",{"_index":329,"title":{},"body":{"interfaces/PositionBase.html":{}}}],["src/lib/drag",{"_index":290,"title":{},"body":{"modules/NgxDragResizeModule.html":{}}}],["src/lib/drag/drag",{"_index":260,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["src/lib/drag/drag.directive.ts",{"_index":44,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:130",{"_index":122,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:70",{"_index":105,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:75",{"_index":101,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:80",{"_index":96,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:87",{"_index":86,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.directive.ts:94",{"_index":82,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["src/lib/drag/drag.ts",{"_index":40,"title":{},"body":{"interfaces/NgxDrag.html":{}}}],["src/lib/drag/position",{"_index":427,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/resize/position",{"_index":428,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/lib/resize/resize",{"_index":309,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{},"miscellaneous/enumerations.html":{}}}],["src/lib/resize/resize.ts",{"_index":308,"title":{},"body":{"interfaces/NgxResize.html":{}}}],["src/lib/resize/scale.ts",{"_index":331,"title":{},"body":{"interfaces/Scale.html":{}}}],["src/lib/shared/boundary/boundary.ts",{"_index":6,"title":{},"body":{"interfaces/Boundary.html":{}}}],["standalone",{"_index":152,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["started",{"_index":334,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["starts",{"_index":216,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["strategy",{"_index":107,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["strategy.ts",{"_index":423,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["string",{"_index":85,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["style",{"_index":111,"title":{},"body":{"directives/NgxDragDirective.html":{},"index.html":{}}}],["subject",{"_index":134,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["subscribe",{"_index":207,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["super(window",{"_index":171,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["support",{"_index":395,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":396,"title":{},"body":{"modules.html":{}}}],["takeuntil",{"_index":137,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["takeuntil(this.destroy",{"_index":205,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["takeuntil(this.observabletargetchange",{"_index":206,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["tap",{"_index":138,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["tap((event",{"_index":189,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["tap(this.ondrag.bind(this",{"_index":204,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["target",{"_index":124,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["template",{"_index":377,"title":{},"body":{"index.html":{}}}],["tests",{"_index":357,"title":{},"body":{"changelog.html":{}}}],["this.basedonboundary(left",{"_index":249,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.basedonboundary(top",{"_index":246,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.boundary",{"_index":166,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.destroy$.complete",{"_index":180,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.destroy$.next(void",{"_index":178,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.dragdirective",{"_index":271,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["this.dragdirective.observe(this.elementref.nativeelement",{"_index":272,"title":{},"body":{"directives/NgxDragHandleDirective.html":{}}}],["this.dragservice",{"_index":186,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.elementref.nativeelement",{"_index":125,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.elementref.nativeelement.getboundingclientrect",{"_index":184,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.emitdrag(event.nativeevent",{"_index":244,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.getboundary",{"_index":221,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.hostelementrectinitial",{"_index":197,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.hostelementrectinitial.left",{"_index":236,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.hostelementrectinitial.top",{"_index":237,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.ngxdragdisabled",{"_index":219,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.ngxdragged.emit",{"_index":256,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.ngxdraglockaxis",{"_index":238,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.ngxdragpositionstrategy",{"_index":235,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.observabletargetchange$.complete",{"_index":181,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.observabletargetchange$.next(void",{"_index":182,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.observe",{"_index":176,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{}}}],["this.renderer.setstyle(this.elementref.nativeelement",{"_index":253,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.resizedirective",{"_index":326,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["this.resizedirective.observe(this.elementref.nativeelement",{"_index":327,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["this.resizedirective.unsubscribe(this.elementref.nativeelement",{"_index":328,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["this.updatehoststyle('left",{"_index":248,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.updatehoststyle('top",{"_index":245,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.updatehoststyle('transform",{"_index":241,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.updateinitialrect",{"_index":198,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.window",{"_index":210,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.window.scrollx",{"_index":212,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["this.window.scrolly",{"_index":214,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["top",{"_index":12,"title":{},"body":{"interfaces/Boundary.html":{},"directives/NgxDragDirective.html":{},"miscellaneous/enumerations.html":{}}}],["top')}px",{"_index":247,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["topleft",{"_index":362,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["topright",{"_index":363,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["top}px",{"_index":243,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["touch",{"_index":385,"title":{},"body":{"index.html":{}}}],["touchevent",{"_index":38,"title":{},"body":{"interfaces/MovementBase.html":{},"miscellaneous/typealiases.html":{}}}],["transform",{"_index":109,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["translate3d",{"_index":110,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["translate3d(${left}px",{"_index":242,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["tslib",{"_index":337,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":383,"title":{},"body":{"index.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/Boundary.html":{},"interfaces/Movement.html":{},"interfaces/MovementBase.html":{},"interfaces/NgxDrag.html":{},"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"interfaces/NgxResize.html":{},"directives/NgxResizeHandleDirective.html":{},"interfaces/PositionBase.html":{},"interfaces/Scale.html":{},"miscellaneous/typealiases.html":{}}}],["type.enum",{"_index":321,"title":{},"body":{"directives/NgxResizeHandleDirective.html":{}}}],["type.enum.ts",{"_index":361,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type.ts",{"_index":425,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":416,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typos",{"_index":353,"title":{},"body":{"changelog.html":{}}}],["unit",{"_index":356,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":208,"title":{},"body":{"directives/NgxDragDirective.html":{},"changelog.html":{}}}],["updatehoststyle(style",{"_index":252,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["updateinitialrect",{"_index":209,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["updates",{"_index":251,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["us/docs/web/css/position",{"_index":116,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["us/docs/web/css/transform",{"_index":113,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["usage",{"_index":373,"title":{},"body":{"index.html":{}}}],["use",{"_index":294,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"index.html":{},"properties.html":{}}}],["using",{"_index":381,"title":{},"body":{"index.html":{}}}],["v19",{"_index":345,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":94,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxResizeHandleDirective.html":{},"miscellaneous/enumerations.html":{}}}],["version",{"_index":403,"title":{},"body":{"properties.html":{}}}],["void",{"_index":127,"title":{},"body":{"directives/NgxDragDirective.html":{},"directives/NgxDragHandleDirective.html":{},"directives/NgxResizeHandleDirective.html":{}}}],["want",{"_index":389,"title":{},"body":{"index.html":{}}}],["window",{"_index":77,"title":{},"body":{"directives/NgxDragDirective.html":{}}}],["work",{"_index":380,"title":{},"body":{"index.html":{}}}],["working",{"_index":374,"title":{},"body":{"index.html":{}}}],["x",{"_index":240,"title":{},"body":{"directives/NgxDragDirective.html":{},"interfaces/PositionBase.html":{},"miscellaneous/typealiases.html":{}}}],["y",{"_index":239,"title":{},"body":{"directives/NgxDragDirective.html":{},"interfaces/PositionBase.html":{},"miscellaneous/typealiases.html":{}}}],["yarn",{"_index":371,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":287,"title":{},"body":{"modules/NgxDragResizeModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Boundary.html":{"url":"interfaces/Boundary.html","title":"interface - Boundary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Boundary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/shared/boundary/boundary.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bottom\n                                        \n                                \n                                \n                                        \n                                            left\n                                        \n                                \n                                \n                                        \n                                            right\n                                        \n                                \n                                \n                                        \n                                            top\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bottom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bottom:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        left\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        left:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        right\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        right:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        top:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Boundary {\n  top: number;\n  left: number;\n  bottom: number;\n  right: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Movement.html":{"url":"interfaces/Movement.html","title":"interface - Movement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Movement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/core/movement/movement.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PositionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            initial\n                                        \n                                \n                                \n                                        \n                                            initiator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nativeEvent\n                                        \n                                \n                                \n                                        \n                                            offsetFromHost\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initial\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initial:         PositionBase\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PositionBase\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initiator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initiator:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nativeEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nativeEvent:     Event\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Event\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offsetFromHost\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offsetFromHost:         Boundary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Boundary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {PositionBase} from '../position-base';\nimport {Boundary} from '../../shared/boundary/boundary';\n\nexport interface Movement extends PositionBase {\n  initiator: HTMLElement;\n  offsetFromHost: Boundary;\n  initial: PositionBase;\n  nativeEvent?: Event;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MovementBase.html":{"url":"interfaces/MovementBase.html","title":"interface - MovementBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MovementBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/core/movement/movement-base.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PositionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            initial\n                                        \n                                \n                                \n                                        \n                                            nativeEvent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        initial\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initial:         PositionBase\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PositionBase\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nativeEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nativeEvent:     MouseEvent | TouchEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MouseEvent | TouchEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {PositionBase} from '../position-base';\n\nexport interface MovementBase extends PositionBase {\n  initial: PositionBase;\n  nativeEvent: MouseEvent | TouchEvent;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxDrag.html":{"url":"interfaces/NgxDrag.html","title":"interface - NgxDrag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NgxDrag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/drag/drag.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Boundary\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            nativeEvent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nativeEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nativeEvent:     Event\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Event\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Boundary} from '../shared/boundary/boundary';\n\nexport interface NgxDrag extends Boundary {\n  nativeEvent?: Event;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxDragDirective.html":{"url":"directives/NgxDragDirective.html","title":"directive - NgxDragDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgxDragDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/drag/drag.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                The directive that allows to drag HTML element on page\nSee https://angular.io/guide/angular-compiler-options#strictmetadataemit\n\n            \n\n            \n                Extends\n            \n            \n                            BoundaryDirective\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxDrag]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                observe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngxDragBoundary\n                            \n                            \n                                ngxDragDisabled\n                            \n                            \n                                ngxDragLockAxis\n                            \n                            \n                                ngxDragPositionStrategy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngxDragged\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ngxDragBoundary\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, renderer: Renderer2, dragService: DragService, window: Window, document: Document, platformId: object)\n                    \n                \n                        \n                            \n                                Defined in src/lib/drag/drag.directive.ts:94\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dragService\n                                                  \n                                                        \n                                                                    DragService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        window\n                                                  \n                                                        \n                                                                    Window\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngxDragBoundary\n                    \n                \n                \n                    \n                        Type :     string | HTMLElement\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:87\n                            \n                        \n                \n                    \n                        Constrain for the dragging element.\nCan be as a HTMLElement or CSS selector.\nYou can put 'window' string to define window object as a constrain.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ngxDragDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:80\n                            \n                        \n                \n                    \n                        Disable any drag events\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ngxDragLockAxis\n                    \n                \n                \n                    \n                        Type :         Axis\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:75\n                            \n                        \n                \n                    \n                        Locks axis for the dragging\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ngxDragPositionStrategy\n                    \n                \n                \n                    \n                        Type :         PositionStrategy\n\n                    \n                \n                \n                    \n                        Default value : 'free'\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:70\n                            \n                        \n                \n                    \n                        Define positioning strategy.\n'free' - position will changing by 'transform: translate3d()' style\nSee https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/translate3d\n'relative' - position will changing by 'top' and 'left' style\nSee https://developer.mozilla.org/en-US/docs/Web/CSS/position\nDefault is 'free'.\n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ngxDragged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/drag/drag.directive.ts:94\n                            \n                        \n                \n                    \n                        Emits changes when element was dragged\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        observe\n                        \n                    \n                \n            \n            \n                \nobserve(target)\n                \n            \n\n\n                    \n                        \n                            Defined in src/lib/drag/drag.directive.ts:130\n                        \n                    \n\n\n            \n                \n                        Observe the element dragging which will be as handle for dragging\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                target\n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    this.elementRef.nativeElement\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        ngxDragBoundary\n                    \n                \n\n\n                \n                    \n                        setngxDragBoundary(boundary: string | HTMLElement)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/drag/drag.directive.ts:87\n                                \n                            \n                    \n                        \n                                Constrain for the dragging element.\nCan be as a HTMLElement or CSS selector.\nYou can put 'window' string to define window object as a constrain.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            boundary\n                                                    \n                                                            \n                                                                        string | HTMLElement\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n  Renderer2,\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { map, takeUntil, tap } from 'rxjs/operators';\nimport { DOCUMENT, isPlatformServer } from '@angular/common';\nimport {BoundaryDirective} from '../shared/boundary/boundary.directive';\nimport {PositionStrategy} from './position-strategy';\nimport {Axis} from '../core/axis';\nimport {NgxDrag} from './drag';\nimport {DragService} from '../core/drag.service';\nimport {WINDOW} from '../core/window.token';\nimport {MovementBase} from '../core/movement/movement-base';\nimport {Movement} from '../core/movement/movement';\nimport {Boundary} from '../shared/boundary/boundary';\nimport {PositionBase} from '../core/position-base';\n\n/**\n * The directive that allows to drag HTML element on page\n *\n * @author Dmytro Parfenov \n *\n * @dynamic\n * @see https://angular.io/guide/angular-compiler-options#strictmetadataemit\n */\n@Directive({\n    selector: '[ngxDrag]',\n    standalone: false\n})\nexport class NgxDragDirective extends BoundaryDirective implements OnInit, OnDestroy {\n\n  /**\n   * Initial size and position of host element\n   */\n  private hostElementRectInitial: {\n    left: number;\n    top: number;\n  } | null = null;\n\n  /**\n   * Emits when directive was destroyed\n   */\n  private destroy$ = new Subject();\n\n  /**\n   * Emits when observable target was changed\n   */\n  private observableTargetChange$ = new Subject();\n\n  /**\n   * Define positioning strategy.\n   *\n   * 'free' - position will changing by 'transform: translate3d()' style\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/translate3d\n   *\n   * 'relative' - position will changing by 'top' and 'left' style\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/position\n   *\n   * Default is 'free'.\n   */\n  @Input() ngxDragPositionStrategy: PositionStrategy = 'free';\n\n  /**\n   * Locks axis for the dragging\n   */\n  @Input() ngxDragLockAxis: Axis = null;\n\n  /**\n   * Disable any drag events\n   */\n  @Input() ngxDragDisabled = false;\n\n  /**\n   * Constrain for the dragging element.\n   * Can be as a HTMLElement or CSS selector.\n   * You can put 'window' string to define window object as a constrain.\n   */\n  @Input() set ngxDragBoundary(boundary: string | HTMLElement) {\n    this.boundary = boundary;\n  }\n\n  /**\n   * Emits changes when element was dragged\n   */\n  @Output() ngxDragged = new EventEmitter();\n\n  constructor(\n    private readonly elementRef: ElementRef,\n    private readonly renderer: Renderer2,\n    private readonly dragService: DragService,\n    @Inject(WINDOW) private readonly window: Window,\n    @Inject(DOCUMENT) private readonly document: Document,\n    @Inject(PLATFORM_ID) private readonly platformId: object\n  ) {\n    super(window, document);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  ngOnInit(): void {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n\n    this.observe();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  ngOnDestroy(): void {\n    this.destroy$.next(void 0);\n    this.destroy$.complete();\n    this.observableTargetChange$.complete();\n  }\n\n  /**\n   * Observe the element dragging which will be as handle for dragging\n   */\n  observe(target = this.elementRef.nativeElement): void {\n    this.observableTargetChange$.next(void 0);\n\n    let hostElementRect = this.elementRef.nativeElement.getBoundingClientRect();\n    let eventInitial: PositionBase | null = null;\n\n    this.dragService\n      .fromElement(target)\n      .pipe(\n        tap((event) => event.nativeEvent.preventDefault()),\n        map((event) => {\n          if (\n            !eventInitial ||\n            eventInitial.x !== event.initial.x ||\n            eventInitial.y !== event.initial.y\n          ) {\n            eventInitial = event.initial;\n            hostElementRect = this.elementRef.nativeElement.getBoundingClientRect();\n\n            if (!this.hostElementRectInitial) {\n              this.updateInitialRect();\n            }\n          }\n\n          const offsetFromHost = {\n            top: event.initial.y - hostElementRect.top,\n            left: event.initial.x - hostElementRect.left,\n            bottom: hostElementRect.bottom - event.initial.y,\n            right: hostElementRect.right - event.initial.x,\n          } as Boundary;\n\n          return {\n            ...event,\n            initiator: target,\n            offsetFromHost,\n            initial: event.initial,\n          };\n        }),\n        tap(this.onDrag.bind(this)),\n        takeUntil(this.destroy$),\n        takeUntil(this.observableTargetChange$)\n      )\n      .subscribe();\n  }\n\n  /**\n   * Update size and position of host element\n   */\n  private updateInitialRect(): void {\n    if (!this.window) {\n      return;\n    }\n\n    const rect = this.elementRef.nativeElement.getBoundingClientRect();\n\n    this.hostElementRectInitial = {\n      left: this.window.scrollX + rect.left,\n      top: this.window.scrollY + rect.top,\n    };\n  }\n\n  /**\n   * Starts the calculation of drag event and changes host position\n   */\n  private onDrag(event: Movement): void {\n    if (this.ngxDragDisabled) {\n      return;\n    }\n\n    const hostElementRect = this.elementRef.nativeElement.getBoundingClientRect();\n    const boundaryRect = this.getBoundary();\n\n    let left = event.x - event.offsetFromHost.left;\n    let top = event.y - event.offsetFromHost.top;\n\n    if (boundaryRect) {\n      left = Math.max(boundaryRect.left, left);\n      left = Math.min(\n        boundaryRect.left + (boundaryRect.right - boundaryRect.left) - hostElementRect.width,\n        left\n      );\n\n      top = Math.max(boundaryRect.top, top);\n      top = Math.min(\n        boundaryRect.top + (boundaryRect.bottom - boundaryRect.top) - hostElementRect.height,\n        top\n      );\n    }\n\n    if (this.ngxDragPositionStrategy === 'free' && this.hostElementRectInitial) {\n      left = left - this.hostElementRectInitial.left + this.window.scrollX;\n      top = top - this.hostElementRectInitial.top + this.window.scrollY;\n\n      if (this.ngxDragLockAxis === 'y') {\n        top = hostElementRect.top - this.hostElementRectInitial.top + this.window.scrollY;\n      }\n\n      if (this.ngxDragLockAxis === 'x') {\n        left = hostElementRect.left - this.hostElementRectInitial.left + this.window.scrollX;\n      }\n\n      this.updateHostStyle('transform', `translate3d(${left}px, ${top}px, 0)`);\n      this.emitDrag(event.nativeEvent);\n      return;\n    }\n\n    if (this.ngxDragLockAxis === 'x') {\n      this.updateHostStyle('top', `${this.basedOnBoundary(top, 'top')}px`);\n      this.emitDrag(event.nativeEvent);\n      return;\n    }\n\n    if (this.ngxDragLockAxis === 'y') {\n      this.updateHostStyle('left', `${this.basedOnBoundary(left, 'left')}px`);\n      this.emitDrag(event.nativeEvent);\n      return;\n    }\n\n    this.updateHostStyle('left', `${this.basedOnBoundary(left, 'left')}px`);\n    this.updateHostStyle('top', `${this.basedOnBoundary(top, 'top')}px`);\n    this.emitDrag(event.nativeEvent);\n  }\n\n  /**\n   * Updates the host style\n   */\n  private updateHostStyle(style: string, value: any): void {\n    this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n  }\n\n  /**\n   * Emits drag event to the {@link ngxDragged}\n   */\n  private emitDrag(nativeEvent?: Event): void {\n    const rect = this.elementRef.nativeElement.getBoundingClientRect();\n\n    this.ngxDragged.emit({\n      nativeEvent,\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxDragHandleDirective.html":{"url":"directives/NgxDragHandleDirective.html","title":"directive - NgxDragHandleDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgxDragHandleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/drag/drag-handle.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                The directive that allows to mark HTML element as handle of dragging element for NgxDragDirective\nSee https://angular.io/guide/angular-compiler-options#strictmetadataemit\n\n            \n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxDragHandle]\n                    \n\n\n\n\n                \n            \n        \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, dragDirective: NgxDragDirective, platformId: object)\n                    \n                \n                        \n                            \n                                Defined in src/lib/drag/drag-handle.directive.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dragDirective\n                                                  \n                                                        \n                                                                        NgxDragDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  Inject,\n  OnDestroy,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport {NgxDragDirective} from './drag.directive';\n\n/**\n * The directive that allows to mark HTML element as handle of dragging element for {@link NgxDragDirective}\n *\n * @author Dmytro Parfenov \n *\n * @dynamic\n * @see https://angular.io/guide/angular-compiler-options#strictmetadataemit\n */\n@Directive({\n    selector: '[ngxDragHandle]',\n    standalone: false\n})\nexport class NgxDragHandleDirective implements AfterViewInit, OnDestroy {\n  constructor(\n    private readonly elementRef: ElementRef,\n    @Optional() private readonly dragDirective: NgxDragDirective,\n    @Inject(PLATFORM_ID) private readonly platformId: object\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  ngAfterViewInit(): void {\n    this.observe();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  ngOnDestroy(): void {\n    this.observe();\n  }\n\n  /**\n   * Sets host element as observable point for {@link NgxDragDirective}\n   */\n  private observe(): void {\n    if (isPlatformServer(this.platformId) || !this.dragDirective) {\n      return;\n    }\n\n    this.dragDirective.observe(this.elementRef.nativeElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxDragResizeModule.html":{"url":"modules/NgxDragResizeModule.html","title":"module - NgxDragResizeModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxDragResizeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxDragResizeModule\n\n\n\ncluster_NgxDragResizeModule_exports\n\n\n\ncluster_NgxDragResizeModule_declarations\n\n\n\n\nNgxDragDirective\n\nNgxDragDirective\n\n\n\nNgxDragResizeModule\n\nNgxDragResizeModule\n\nNgxDragResizeModule -->\n\nNgxDragDirective->NgxDragResizeModule\n\n\n\n\n\nNgxDragHandleDirective\n\nNgxDragHandleDirective\n\nNgxDragResizeModule -->\n\nNgxDragHandleDirective->NgxDragResizeModule\n\n\n\n\n\nNgxResizeDirective\n\nNgxResizeDirective\n\nNgxDragResizeModule -->\n\nNgxResizeDirective->NgxDragResizeModule\n\n\n\n\n\nNgxResizeHandleDirective\n\nNgxResizeHandleDirective\n\nNgxDragResizeModule -->\n\nNgxResizeHandleDirective->NgxDragResizeModule\n\n\n\n\n\nNgxDragDirective \n\nNgxDragDirective \n\nNgxDragDirective  -->\n\nNgxDragResizeModule->NgxDragDirective \n\n\n\n\n\nNgxDragHandleDirective \n\nNgxDragHandleDirective \n\nNgxDragHandleDirective  -->\n\nNgxDragResizeModule->NgxDragHandleDirective \n\n\n\n\n\nNgxResizeDirective \n\nNgxResizeDirective \n\nNgxResizeDirective  -->\n\nNgxDragResizeModule->NgxResizeDirective \n\n\n\n\n\nNgxResizeHandleDirective \n\nNgxResizeHandleDirective \n\nNgxResizeHandleDirective  -->\n\nNgxDragResizeModule->NgxResizeHandleDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/drag-resize.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The module provides opportunity to use drag and resize functionality on HTML elements\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NgxDragDirective\n                        \n                        \n                            NgxDragHandleDirective\n                        \n                        \n                            NgxResizeDirective\n                        \n                        \n                            NgxResizeHandleDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NgxDragDirective\n                        \n                        \n                            NgxDragHandleDirective\n                        \n                        \n                            NgxResizeDirective\n                        \n                        \n                            NgxResizeHandleDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {NgxDragDirective} from './drag/drag.directive';\nimport {NgxDragHandleDirective} from './drag/drag-handle.directive';\nimport {NgxResizeDirective} from './resize/resize.directive';\nimport {NgxResizeHandleDirective} from './resize/resize-handle.directive';\nimport {SharedModule} from './shared/shared.module';\n\n/**\n * The module provides opportunity to use drag and resize functionality on HTML elements\n *\n * @author Dmytro Parfenov \n */\n@NgModule({\n  imports: [\n    SharedModule\n  ],\n  declarations: [\n    NgxDragDirective,\n    NgxDragHandleDirective,\n    NgxResizeDirective,\n    NgxResizeHandleDirective\n  ],\n  exports: [NgxDragDirective, NgxDragHandleDirective, NgxResizeDirective, NgxResizeHandleDirective]\n})\nexport class NgxDragResizeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxResize.html":{"url":"interfaces/NgxResize.html","title":"interface - NgxResize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NgxResize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/resize/resize.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Boundary\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            nativeEvent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        nativeEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nativeEvent:     Event\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Event\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Boundary} from '../shared/boundary/boundary';\n\nexport interface NgxResize extends Boundary {\n  nativeEvent?: Event;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NgxResizeHandleDirective.html":{"url":"directives/NgxResizeHandleDirective.html","title":"directive - NgxResizeHandleDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  NgxResizeHandleDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/resize/resize-handle.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                The directive that allows to mark HTML element as one of handle of resizing element for NgxResizeDirective\nSee https://angular.io/guide/angular-compiler-options#strictmetadataemit\n\n            \n\n\n            \n                Implements\n            \n            \n                        AfterViewInit\n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ngxResizeHandle]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngxResizeHandle\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, platformId: object, resizeDirective: NgxResizeDirective)\n                    \n                \n                        \n                            \n                                Defined in src/lib/resize/resize-handle.directive.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resizeDirective\n                                                  \n                                                        \n                                                                        NgxResizeDirective\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ngxResizeHandle\n                    \n                \n                \n                    \n                        Type :         NgxResizeHandleType | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/lib/resize/resize-handle.directive.ts:34\n                            \n                        \n                \n                    \n                        Sets the attribute which define the side the HTML element will affect during drag\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostBinding,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport {NgxResizeHandleType} from './resize-handle-type.enum';\nimport {NgxResizeDirective} from './resize.directive';\n\n/**\n * The directive that allows to mark HTML element as one of handle of resizing element for {@link NgxResizeDirective}\n *\n * @author Dmytro Parfenov \n *\n * @dynamic\n * @see https://angular.io/guide/angular-compiler-options#strictmetadataemit\n */\n@Directive({\n    selector: '[ngxResizeHandle]',\n    standalone: false\n})\nexport class NgxResizeHandleDirective implements AfterViewInit, OnDestroy {\n  /**\n   * Sets the attribute which define the side the HTML element will affect during drag\n   */\n  @Input('ngxResizeHandle')\n  @HostBinding('attr.data-ngx-resize-handle-type')\n  type: NgxResizeHandleType | null = null;\n\n  constructor(\n    private readonly elementRef: ElementRef,\n    @Inject(PLATFORM_ID) private readonly platformId: object,\n    @Optional() private readonly resizeDirective: NgxResizeDirective\n  ) {}\n\n  /**\n   * @inheritDoc\n   */\n  ngAfterViewInit(): void {\n    if (isPlatformServer(this.platformId) || !this.resizeDirective) {\n      return;\n    }\n\n    this.resizeDirective.observe(this.elementRef.nativeElement);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  ngOnDestroy(): void {\n    if (!this.resizeDirective) {\n      return;\n    }\n\n    this.resizeDirective.unsubscribe(this.elementRef.nativeElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PositionBase.html":{"url":"interfaces/PositionBase.html","title":"interface - PositionBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PositionBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/core/position-base.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PositionBase {\n  x: number;\n  y: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Scale.html":{"url":"interfaces/Scale.html","title":"interface - Scale","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Scale\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/resize/scale.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            delta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        delta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Scale {\n  delta: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\n1.0.2\n\nupdate dependencies\ntslib: ^2.8.1\n\n\n\n1.0.1\n\nupdate peerDependencies\n@angular/common: ^19.0.0\n@angular/core: ^19.0.0\n\n\n\n1.0.0\n\nmigrate to Angular v19\nmigrate to ESLint\n\n0.0.6\n\nupdate docs\n\n0.0.5\n\nupdate docs\n\n0.0.4\n\nupdate docs\n\n0.0.3\n\ndocumentation typos\n\n0.0.2\n\nadded unit tests\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NgxResizeHandleType   (src/.../resize-handle-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/resize/resize-handle-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        NgxResizeHandleType\n                    \n                \n                        \n                            \n                                 TopLeft\n                            \n                        \n                        \n                            \n                                Value : top-left\n                            \n                        \n                        \n                            \n                                 Top\n                            \n                        \n                        \n                            \n                                Value : top\n                            \n                        \n                        \n                            \n                                 TopRight\n                            \n                        \n                        \n                            \n                                Value : top-right\n                            \n                        \n                        \n                            \n                                 Right\n                            \n                        \n                        \n                            \n                                Value : right\n                            \n                        \n                        \n                            \n                                 BottomRight\n                            \n                        \n                        \n                            \n                                Value : bottom-right\n                            \n                        \n                        \n                            \n                                 Bottom\n                            \n                        \n                        \n                            \n                                Value : bottom\n                            \n                        \n                        \n                            \n                                 BottomLeft\n                            \n                        \n                        \n                            \n                                Value : bottom-left\n                            \n                        \n                        \n                            \n                                 Left\n                            \n                        \n                        \n                            \n                                Value : left\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-drag-resize\nThe Angular library provides opportunity to use drag and resize functionality on HTML element.\nDemo\nngx-drag-resize\nInstall\nNPM: npm install ngx-drag-resize --save\nYarn: yarn add ngx-drag-resize\nUsage\nImport NgxDragResizeModule to your working module\nExample :import {NgxDragResizeModule} from 'ngx-drag-resize';\n\n@NgModule({\n  imports: [\n    NgxDragResizeModule\n  ]\n})\nexport class AppModule { }Use directives in your template\nSimple drag\nExample :drag meInitiates only by dragging ngxDragHandle\nExample :\n  drag me\n  handle\nA simple resize will work only by using scroll or two fingers on touch devices\nExample :resize meResize using borders.\nYou have to style all elements as you want.\nExample :\n  resize me\n  \n  \n  \n  \n  \n  \n  \n  \nMore examples you can find in demo app\nDocumentation\nDocs page\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxDragResizeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxDragResizeModule\n\n\n\ncluster_NgxDragResizeModule_declarations\n\n\n\ncluster_NgxDragResizeModule_exports\n\n\n\n\nNgxDragDirective\n\nNgxDragDirective\n\n\n\nNgxDragResizeModule\n\nNgxDragResizeModule\n\nNgxDragResizeModule -->\n\nNgxDragDirective->NgxDragResizeModule\n\n\n\n\n\nNgxDragHandleDirective\n\nNgxDragHandleDirective\n\nNgxDragResizeModule -->\n\nNgxDragHandleDirective->NgxDragResizeModule\n\n\n\n\n\nNgxResizeDirective\n\nNgxResizeDirective\n\nNgxDragResizeModule -->\n\nNgxResizeDirective->NgxDragResizeModule\n\n\n\n\n\nNgxResizeHandleDirective\n\nNgxResizeHandleDirective\n\nNgxDragResizeModule -->\n\nNgxResizeHandleDirective->NgxDragResizeModule\n\n\n\n\n\nNgxDragDirective \n\nNgxDragDirective \n\nNgxDragDirective  -->\n\nNgxDragResizeModule->NgxDragDirective \n\n\n\n\n\nNgxDragHandleDirective \n\nNgxDragHandleDirective \n\nNgxDragHandleDirective  -->\n\nNgxDragResizeModule->NgxDragHandleDirective \n\n\n\n\n\nNgxResizeDirective \n\nNgxResizeDirective \n\nNgxResizeDirective  -->\n\nNgxDragResizeModule->NgxResizeDirective \n\n\n\n\n\nNgxResizeHandleDirective \n\nNgxResizeHandleDirective \n\nNgxResizeHandleDirective  -->\n\nNgxDragResizeModule->NgxResizeHandleDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.2\n        \n            Description : The Angular library provides opportunity to use drag and resize functionality on HTML element\n        \n            Keywords : angular, ngx, drag, resize\n        \n            Homepage : https://dmytro-parfenov.github.io/ngx-drag-resize\n        \n            Bugs : https://github.com/dmytro-parfenov/ngx-drag-resize/issues\n        \n            License : MIT\n        \n            Repository : https://github.com/dmytro-parfenov/ngx-drag-resize.git\n        \n            Author : Dmytro Parfenov\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Axis   (src/.../axis.ts)\n                        \n                        \n                            MovementNative   (src/.../movement-native.ts)\n                        \n                        \n                            PositionStrategy   (src/.../position-strategy.ts)\n                        \n                        \n                            PositionType   (src/.../position-type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/core/axis.ts\n    \n    \n        \n            \n                \n                    \n                    Axis\n                \n            \n            \n                \n                        \"x\" | \"y\" | null\n\n                \n            \n        \n    \n    src/lib/core/movement/movement-native.ts\n    \n    \n        \n            \n                \n                    \n                    MovementNative\n                \n            \n            \n                \n                        MouseEvent | TouchEvent\n\n                \n            \n        \n    \n    src/lib/drag/position-strategy.ts\n    \n    \n        \n            \n                \n                    \n                    PositionStrategy\n                \n            \n            \n                \n                        \"relative\" | \"free\"\n\n                \n            \n        \n    \n    src/lib/resize/position-type.ts\n    \n    \n        \n            \n                \n                    \n                    PositionType\n                \n            \n            \n                \n                        \"fixed\" | \"absolute\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
